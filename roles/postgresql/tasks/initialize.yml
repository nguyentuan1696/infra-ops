- name: Create PostgreSQL users
  become: true
  become_user: "{{ postgresql_user }}"
  postgresql_user:
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    role_attr_flags: "{{ item.role_attr_flags | default('NOSUPERUSER,NOCREATEDB') }}"
    state: present
  loop: "{{ postgresql_users }}"
  no_log: false
  tags: [postgresql_initialize]

- name: Create PostgreSQL databases
  become: true
  become_user: "{{ postgresql_user }}"
  postgresql_db:
    name: "{{ item.name }}"
    owner: "{{ item.owner | default(postgresql_user) }}"
    encoding: "{{ item.encoding | default('UTF-8') }}"
    lc_collate: "{{ item.lc_collate | default('en_US.UTF-8') }}"
    lc_ctype: "{{ item.lc_ctype | default('en_US.UTF-8') }}"
    template: "{{ item.template | default('template0') }}"
    state: present
  loop: "{{ postgresql_databases }}"
  tags: [postgresql_initialize]

- name: Grant database privileges to users
  become: true
  become_user: "{{ postgresql_user }}"
  postgresql_privs:
    database: "{{ item.0.name }}"
    roles: "{{ item.1.name }}"
    type: database
    privs: ALL
    state: present
  loop: "{{ lookup('nested', postgresql_databases, postgresql_users) }}"
  when: item.0.owner == item.1.name
  tags: [postgresql_initialize]
